#!/bin/bash

# Author of changes: trimstray (contact@nslab.at)
# Declare first before used it.
cfg_modules=""

[ -n "$DEBUG" ] && set -v

set -eu

# Author of changes: trimstray (contact@nslab.at)
# We are not able to determine the value of the WELDER_ROOT variable so:
# shellcheck disable=SC1090
source "${WELDER_ROOT}/libexec/priv/_helpers"

playbook=$1
[ -z "$playbook" ] && __fail "Usage: x run <playbook-name>"

__load_config "$playbook.yml"

[ ! -d ./modules ] && __fail "no modules/ directory found"

# Run all *.sh scripts for each module listed in $playbook
function __run_scripts() {
  echo

  for module in "${cfg_modules[@]}"
  do
    # Author of changes: trimstray (contact@nslab.at)
    # Removed '\n' - it is used in __info().
    __info "module $module"

    if [ -z "${cfg_shared_path-}" ]; then
      module_path="./modules/$module"
    else
      # shared path defined
      if [ -d "./modules/$module" ]; then
        # local module should have priority
        module_path="./modules/$module"
      else
        module_path="$cfg_shared_path/modules/$module"
      fi
    fi

    # Author of changes: trimstray (contact@nslab.at)
    for script in $(find "$module_path" -name "*.sh")
    do
    # Author of changes: trimstray (contact@nslab.at)
    # Removed '\n' - it is used in __info().
      __info "script $script"

      # Author of changes: trimstray (contact@nslab.at)
      if [ -z "${sudo_pass+x}" ]
      then
        # no sudo_pass set, run the script directly
        ssh -t "$cfg_ssh_url" -p "$cfg_ssh_port" "$(< $script)"
      else
        # wrap the ssh script with an "expect" script to automatically
        # enter sudo password
        # Author of changes: trimstray (contact@nslab.at)
        "${WELDER_ROOT}/libexec/priv/run-ssh-script" "$cfg_ssh_url" "$cfg_ssh_port" "$(< $script)" "$sudo_pass"
      fi

      echo
    done

    echo
    echo
  done
}

# Author of changes: trimstray (contact@nslab.at)
welder compile "$playbook"

# Ask sudo password for non-root users
# For this to work, ssh_url needs to follow user@server-url format
# Author of changes: trimstray (contact@nslab.at)
if [[ ! "$cfg_ssh_url" =~ root\@.* ]]
then
  # Author of changes: trimstray (contact@nslab.at)
  __user "used sudo password for $cfg_ssh_url"
  # Author of changes: trimstray (contact@nslab.at)
  # Added -r opt to read because:
  #   - we want strip leading and trailing spaces
  #   - we want to read data without removing backslashes before spaces and line feeds
  #   - added prompt with -p option
  read -p "  Password:" -rse sudo_pass
fi

__run_scripts

# Author of changes: trimstray (contact@nslab.at)
welder cleanup "$playbook"

__success "all done!"
